services:
  postgres:
    image: postgres:16-alpine
    container_name: helltv-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-helltv}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - helltv-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: helltv-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      API_KEY: ${API_KEY:-your-secret-api-key}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-helltv}
      DB_SSL: ${DB_SSL:-false}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - helltv-network

volumes:
  postgres_data:
    driver: local

networks:
  helltv-network:
    driver: bridge

